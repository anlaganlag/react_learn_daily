{"ast":null,"code":"class MessageParser {\n  constructor(actionProvider, state) {\n    this.parse = message => {\n      const lowerCase = message.toLowerCase();\n\n      if (lowerCase.includes(\"messageparser\") || lowerCase.includes(\"parse\") || lowerCase.includes(\"parser\") || lowerCase.includes(\"message parser\")) {\n        return this.actionProvider.handleMessageParser();\n      }\n\n      return this.actionProvider.handleDefault();\n    };\n\n    this.actionProvider = actionProvider; // State represents the chatbot state and is passed \n    // in at initalization. You can use it to read chatbot state\n    // inside the messageParser\n\n    this.state = state;\n  }\n\n}\n\nexport default MessageParser;","map":{"version":3,"sources":["/home/gal/Desktop/projects/react_learn_daily/react-chatbot-kit/src/chatbot/MessageParser.js"],"names":["MessageParser","constructor","actionProvider","state","parse","message","lowerCase","toLowerCase","includes","handleMessageParser","handleDefault"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,KAAjB,EAAwB;AAAA,SAQnCC,KARmC,GAQ1BC,OAAD,IAAa;AACnB,YAAMC,SAAS,GAAGD,OAAO,CAACE,WAAR,EAAlB;;AAEA,UACED,SAAS,CAACE,QAAV,CAAmB,eAAnB,KACAF,SAAS,CAACE,QAAV,CAAmB,OAAnB,CADA,IAEAF,SAAS,CAACE,QAAV,CAAmB,QAAnB,CAFA,IAGAF,SAAS,CAACE,QAAV,CAAmB,gBAAnB,CAJF,EAKE;AACA,eAAO,KAAKN,cAAL,CAAoBO,mBAApB,EAAP;AACD;;AACD,aAAO,KAAKP,cAAL,CAAoBQ,aAApB,EAAP;AACD,KApBkC;;AACjC,SAAKR,cAAL,GAAsBA,cAAtB,CADiC,CAEjC;AACA;AACA;;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAPe;;AAwBlB,eAAeH,aAAf","sourcesContent":["class MessageParser {\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      // State represents the chatbot state and is passed \n      // in at initalization. You can use it to read chatbot state\n      // inside the messageParser\n      this.state = state\n    }\n  \n    parse = (message) => {\n      const lowerCase = message.toLowerCase();\n  \n      if (\n        lowerCase.includes(\"messageparser\") ||\n        lowerCase.includes(\"parse\") ||\n        lowerCase.includes(\"parser\") ||\n        lowerCase.includes(\"message parser\")\n      ) {\n        return this.actionProvider.handleMessageParser();\n      }\n      return this.actionProvider.handleDefault();\n    };\n  }\n  \n  export default MessageParser;"]},"metadata":{},"sourceType":"module"}